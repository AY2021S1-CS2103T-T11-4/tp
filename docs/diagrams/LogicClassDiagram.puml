@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic {

package Parser {
Interface Parser <<Interface>>
Interface PageParser <<Interface>>
Class PageParser
Class 123PageParser
Class XYZ123CommandParser
Class CliSyntax
Class ParserUtil
Class ArgumentMultimap
Class ArgumentTokenizer
Class Prefix
}

package Commands {
Class XYZ123Command
Class CommandResult
Class "{abstract}\nCommand" as Command
}

Interface Logic <<Interface>>
Class LogicManager
}

package Model{
Class HiddenModel #FFFFFF
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic

LogicManager .up.|> Logic
LogicManager -->"1" PageParser

123PageParser .up.|> PageParser
123PageParser .left.> XYZ123CommandParser: creates >

XYZ123CommandParser ..> XYZ123Command : creates >
XYZ123CommandParser ..|> Parser
XYZ123CommandParser .left.> ArgumentMultimap
XYZ123CommandParser ..> ArgumentTokenizer
ArgumentTokenizer .left.> ArgumentMultimap
XYZ123CommandParser ..> CliSyntax
CliSyntax ..> Prefix
XYZ123CommandParser ..> ParserUtil
ParserUtil .down.> Prefix
ArgumentTokenizer .down.> Prefix
XYZ123Command -up-|> Command
LogicManager .left.> Command : executes >

LogicManager -right-> Model
Command .up.> Model

note right of 123PageParser: 123PageParser =\nBudgetPageParser\nor MainPageParser
note bottom of XYZ123CommandParser: XYZ123CommandParser =\nCreateBudgetCommandParser,\nAddExpenditureCommandParser, etc
note bottom of XYZ123Command: XYZ123Command =\nAddExpenditureCommand, \nFindBudgetCommand, etc

Logic ..> CommandResult
LogicManager .down.> CommandResult
Command .up.> CommandResult
CommandResult -[hidden]-> Parser
@enduml
